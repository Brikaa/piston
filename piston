#!/usr/bin/env bash
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )


CONTAINER_NAME="piston_api"

IMAGE_TAG="base-latest"
IMAGE_NAME="ghcr.io/piston"
IMAGE_NAME_DEV="piston"

SUBCOMMAND="$1"
shift

cmd_build(){
    CONTAINER_PATH="$(nix build ".#container" --no-link --json | jq '.[0].outputs.out' -r)"
    docker load -i $CONTAINER_PATH
}

case "$SUBCOMMAND" in
    logs) docker logs -f $CONTAINER_NAME;;

    restart) docker restart $CONTAINER_NAME ;;
    start) 
        docker run \
            --rm \
            --name $CONTAINER_NAME \
            -it "$IMAGE_NAME:$IMAGE_TAG"
    ;;
    stop) docker stop $CONTAINER_NAME ;;
    bash|shell) docker exec -it $CONTAINER_NAME bash ;;

    update)
        git pull
        docker pull "$IMAGE_NAME:$IMAGE_TAG"
        ;;

    # dev commands
    
    build) cmd_build ;;

    start-dev) 
        cmd_build
        docker run \
            --rm \
            -it \
            --name $CONTAINER_NAME \
            -e PISTON_FLAKE_PATH=/piston/packages \
            -v $PWD:/piston/packages \
            -it "$IMAGE_NAME_DEV:$IMAGE_TAG"
    ;;

    test)
        cmd_build
        docker run \
            --rm \
            -it \
            -e PISTON_FLAKE_PATH=/piston/packages \
            -v $PWD:/piston/packages \
            --name piston_test_runner \
            -it "$IMAGE_NAME_DEV:$IMAGE_TAG" \
            piston-test $1

        ;;

    *)
        echo "=== Piston Management ==="
        echo
        echo "Commands:"
        echo " logs                           Show piston logs"
        echo
        echo " start                          Starts piston"
        echo " stop                           Stops piston"
        echo " restart                        Restarts piston"
        echo " shell                          Opens a bash shell for the api container"
        echo
        echo " update                         Fetches latest updates"
        echo
        echo " exec <language> <file>         Execute the files on piston with language"
        echo
        echo "Development Commands:"
        echo "Running some of these commands require a nix environment setup and on the path"
        echo "See https://nixos.wiki/wiki/Nix_Installation_Guide#Stable_Nix"
        echo
        echo " start-dev                      Builds a container locally and starts piston"
        echo " build                          Builds and loads the API container"
        echo " scaffold <language> [runtime]  Initializes a new runtime"
        echo " test <runtime>                 Runs unit tests on the given runtime"
        echo "                                Optionally set runtime to --all to test all"
        echo "                                NOTE: This is only for the runtimes contained"
        echo "                                      within this repo"
        echo
        ;;
esac
